#include <WinSock2.h>

int WSAStartup(
		WORD wVersionRequested,//指定想要加载的Winsock库的版本，高字节为次版本号，低字节主版本号
		LPWSADATA lpWSAData	   //一个指向WSADATA结构的指针，用来返回DLL库的详细信息
	);

//MAKEWORD(x,y)
typedef struct WSAData{
	WORD wVersion;	//库文件建议应用使用的版本
	WORD wHighVersion;//库文件支持的最高版本
	char szDescription[WSADESCRIPTION_LEN+1];//库描述字符串
	char szSystemStatus[WSASYS_STATUS_LEN+1];//系统状态字符串
	unsigned short iMaxSockets;//同时支持的最大套接字的数量
	unsigned short iMaxUdpDg;  //2.0版中已经废弃的参数
	char FAR* lpVendorInfo;	   //2.0版中已废弃的参数
}WSADATA,FAR* LPWSADATA;

--hostent说明
struct hostent {
char *h_name;
char **h_aliases;
int h_addrtype;
int h_length;
char **h_addr_list;
#define h_addr h_addr_list[0]
};
h_name – 地址的正式名称。
h_aliases – 空字节-地址的预备名称的指针。
h_addrtype –地址类型; 通常是AF_INET。  
h_length – 地址的比特长度。
h_addr_list – 零字节-主机网络地址指针。网络字节顺序。
h_addr - h_addr_list中的第一地址。


struct sockaddr_in{
	short sin_family;//地址家族，应为AF_INET
	u_short sin_port;//端口号
	struct in_addr sin_addr;//ip地址
	char   sin_zero[8];//空字节，要设为0
};

struct in_addr{
	union{
		struct{u_char s_b1,s_b2,s_b3,s_b4;}S_un_b;//以上4个u_char来描述
		struct{u_short s_w1,s_w2;}S_un_w;//以上2个u_short来描述
		u_long S_addr;//以上1个u_long来描述
	}S_un;
}

winsock--用来处理本地机器字节顺序和网络字节顺序的转换
u_short htons(u_short hostshort);//将u_short类型变量从主机字节顺序转化为TCP/IP网络字节顺序
u_short htons(u_long hostlong);//将u_long ................................................
u_short ntohs(u_short netshort);//将u_short类型从TCP/IP网络字节顺序转化为主机字节顺序
u_long  ntohs(u_long netlong);//将u_long.............................................
